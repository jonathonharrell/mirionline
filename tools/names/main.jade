doctype
html(ng-app='nameApp')
  head
    title Miri Online Names Editor
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.1/css/bootstrap.min.css')
    link(rel='stylesheet', href='//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css')
    style.
      .list-inline li { margin: 10px }
      .remove { color: red; cursor: pointer }
    script(src='https://code.jquery.com/jquery-2.1.3.min.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.js')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/angular.js/1.3.7/angular.min.js')
    script.
      var app = angular.module('nameApp', []);

      app.controller('MainCtrl', function ($scope, $http, $timeout) {
        $scope.data = JSON.parse($("#data").html());
        $scope.names = JSON.parse($("#names").html());
        $scope.editing = "races";

        Object.keys($scope.data).forEach(function (val) {
          if (!$scope.names[val]) {
            $scope.names[val] = {
              Male: [],
              Female: [],
              Unisex: [],
              Surnames: []
            };
          }
        });

        $scope.renderPreview = function () {
          $scope.preview = angular.toJson($scope.names, true);
        };

        $scope.$watch('names', function () {
          $scope.renderPreview();
        }, true);

        $scope.selectRaceGender = function (race, gender) {
          $scope.selectedGender = gender;
          $scope.selectedRace = race;
          $scope.editing = "names";
        };

        $scope.unselect = function () {
          $scope.selectedGender = undefined;
          $scope.selectedRace = undefined;
          $scope.editing = "races";
        };

        $scope.namecat = '';

        $scope.toggleNameCat = function () {
          if ($scope.namecat === 'Surnames') {
            $scope.namecat = '';
            return;
          }
          $scope.namecat = 'Surnames';
        };

        $scope.addName = function () {
          if ($scope.newName.length < 2) {
            $scope.message = 'Name must be at least 2 characters';
            return;
          }

          if ($scope.namecat === 'Surnames') {
            if ($scope.names[$scope.selectedRace].Surnames.indexOf($scope.newName) > -1) {
              $scope.message = 'Name already exists';
              return;
            }
            $scope.names[$scope.selectedRace].Surnames.push($scope.newName);
            $scope.newName = '';
            return;
          }

          if ($scope.names[$scope.selectedRace][$scope.selectedGender].indexOf($scope.newName) > -1) {
            $scope.message = 'Name already exists';
            return;
          } else {
            $scope.names[$scope.selectedRace][$scope.selectedGender].push($scope.newName);
            $scope.newName = '';
          }
        };

        $scope.removeName = function (name) {
          if ($scope.namecat === 'Surnames') {
            $scope.names[$scope.selectedRace].Surnames.splice($scope.names[$scope.selectedRace].Surnames.indexOf(name), 1);
          } else {
            $scope.names[$scope.selectedRace][$scope.selectedGender].splice($scope.names[$scope.selectedRace][$scope.selectedGender].indexOf(name), 1);
          }
        };

        $scope.generateName = function () {
          var firstNames;
          if ($scope.selectedGender !== 'Unisex') {
            firstNames = _.union($scope.names[$scope.selectedRace][$scope.selectedGender],
              $scope.names[$scope.selectedRace].Unisex);
          } else {
            firstNames = $scope.names[$scope.selectedRace][$scope.selectedGender];
          }
          var first = _.sample(firstNames);
          var last = _.sample($scope.names[$scope.selectedRace].Surnames);
          $scope.generated = first + " " + last;
        }

        $scope.$watch('message', function () {
          $timeout(function () {
            $scope.message = '';
          }, 2000);
        });

        $scope.save = function () {
          $http.post("/save", $scope.names)
          .success(function() {
            $scope.message = 'Successfully saved character creation data.';
          });
        };
      });
  body
    .hide#data=JSON.stringify(data)
    .hide#names=JSON.stringify(names)
    .container
      .row
        .col-xs-2
        .col-xs-8
          h3.text-center Miri Online Tool Suite - Name Options
          p.text-center.text-muted
            | This tool allows adding, editing and removing name generation options to character creation.
      span(ng-controller='MainCtrl')
          span(ng-show='editing === "races"')
            .col-xs-12
              h4
                | Select a Race and Gender
                small.text-muted &nbsp; {{selectedRace}} {{selectedGender}}
            .col-xs-3
            .col-xs-6
              table.table
                thead
                  th Race
                  th(width="33%") Genders
                tbody
                  tr(ng-repeat='(race, detail) in names')
                    td {{race}}
                    td
                      a(href="", ng-click="selectRaceGender(race, 'Male')") Male
                      =" "
                      a(href="", ng-click="selectRaceGender(race, 'Female')") Female
                      =" "
                      a(href="", ng-click="selectRaceGender(race, 'Unisex')") Both
          span(ng-show='editing === "names"')
            .col-xs-12
              h4
                | Editing Names for {{selectedGender}} {{selectedRace}}
            .col-xs-4
              a(href="", ng-click="unselect()")
                i.fa.fa-arrow
                | Back
              =" | "
              a(href="", ng-click="toggleNameCat()")
                span(ng-show="namecat == ''") Edit Surnames
                span(ng-show="namecat == 'Surnames'") Edit First Names
              hr
              .form-group
                input.form-control(ng-model="newName", placeholder="Add Name To {{namecat || 'First Names'}}")
              .form-group
                button.btn.btn-success(ng-click="addName()") Add
              .form-group
                h5 Test
                button.btn.btn-default(ng-click="generateName()") Generate
                h5.text-muted {{generated}}
              hr
              h5 Counts
              p.text-muted First Names: {{names[selectedRace][selectedGender].length}}
              p.text-muted Surnames: {{names[selectedRace].Surnames.length}}
            .col-xs-8
              ul.list-inline(ng-show="namecat == ''")
                li(ng-repeat="name in names[selectedRace][selectedGender] | orderBy: -name")
                  | {{name}}
                  a(href="", style="padding:4px;color:red", ng-click="removeName(name)") X
              ul.list-inline(ng-show="namecat == 'Surnames'")
                li(ng-repeat="name in names[selectedRace].Surnames | orderBy: -name")
                  | {{name}}
                  a(href="", style="padding:4px;color:red", ng-click="removeName(name)") X
          .row
            .col-xs-12.end
              hr
              p.help-block {{message}}
              button.btn.btn-success(ng-click="save()") Save
          .row
            .col-xs-12
              hr
              pre {{preview}}
